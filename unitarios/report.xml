<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="rspec" tests="20" skipped="0" failures="0" errors="0" time="0.042866" timestamp="2020-08-23T22:41:07-03:00" hostname="DESKTOP-SA2JNI0">
<properties>
<property name="seed" value="47245"/>
</properties>
<testcase classname="spec.avengers_spec" name="AvengersHeadQuarter deve adicionar um vingador" file="./spec/avengers_spec.rb" time="0.004254"></testcase>
<testcase classname="spec.avengers_spec" name="AvengersHeadQuarter deve adicionar uma lista de vingadores" file="./spec/avengers_spec.rb" time="0.003837"></testcase>
<testcase classname="spec.avengers_spec" name="AvengersHeadQuarter Thor deve ser o primeiro da lista" file="./spec/avengers_spec.rb" time="0.001756"></testcase>
<testcase classname="spec.avengers_spec" name="AvengersHeadQuarter Ironman deve ser o primeiro da lista" file="./spec/avengers_spec.rb" time="0.000090"></testcase>
<testcase classname="spec.avengers_spec" name="AvengersHeadQuarter deve conter o sobrenome" file="./spec/avengers_spec.rb" time="0.003150"></testcase>
<testcase classname="spec.bank.saque_cc_spec" name="ContaCorrente Saque quando o valor é positivo então atualiza saldo" file="./spec/bank/saque_cc_spec.rb" time="0.002161"></testcase>
<testcase classname="spec.bank.saque_cc_spec" name="ContaCorrente Saque quando o saldo é zero então exibe mensagem" file="./spec/bank/saque_cc_spec.rb" time="0.000107"></testcase>
<testcase classname="spec.bank.saque_cc_spec" name="ContaCorrente Saque quando o saldo é zero E o saldo final com zeros" file="./spec/bank/saque_cc_spec.rb" time="0.000146"></testcase>
<testcase classname="spec.bank.saque_cc_spec" name="ContaCorrente Saque quando o saldo é insuficiente então exibe mensagem" file="./spec/bank/saque_cc_spec.rb" time="0.000091"></testcase>
<testcase classname="spec.bank.saque_cc_spec" name="ContaCorrente Saque quando o saldo é insuficiente E o saldo permanece conforme o valor inicial" file="./spec/bank/saque_cc_spec.rb" time="0.000060"></testcase>
<testcase classname="spec.bank.saque_cc_spec" name="ContaCorrente Saque quando o valor do saque é maior que o limite por transação Então exibe mensagem" file="./spec/bank/saque_cc_spec.rb" time="0.000071"></testcase>
<testcase classname="spec.bank.saque_cc_spec" name="ContaCorrente Saque quando o valor do saque é maior que o limite por transação E o saldo permanece conforme o valor inicial" file="./spec/bank/saque_cc_spec.rb" time="0.000049"></testcase>
<testcase classname="spec.bank.saque_cp_spec" name="ContaPoupanca Saque quando o valor é positivo então atualiza saldo" file="./spec/bank/saque_cp_spec.rb" time="0.000048"></testcase>
<testcase classname="spec.bank.saque_cp_spec" name="ContaPoupanca Saque quando o saldo é zero então exibe mensagem" file="./spec/bank/saque_cp_spec.rb" time="0.000047"></testcase>
<testcase classname="spec.bank.saque_cp_spec" name="ContaPoupanca Saque quando o saldo é zero E o saldo final com zeros" file="./spec/bank/saque_cp_spec.rb" time="0.000047"></testcase>
<testcase classname="spec.bank.saque_cp_spec" name="ContaPoupanca Saque quando o saldo é insuficiente então exibe mensagem" file="./spec/bank/saque_cp_spec.rb" time="0.000052"></testcase>
<testcase classname="spec.bank.saque_cp_spec" name="ContaPoupanca Saque quando o saldo é insuficiente E o saldo permanece conforme o valor inicial" file="./spec/bank/saque_cp_spec.rb" time="0.000055"></testcase>
<testcase classname="spec.bank.saque_cp_spec" name="ContaPoupanca Saque quando o valor do saque é maior que o limite por transação Então exibe mensagem" file="./spec/bank/saque_cp_spec.rb" time="0.000149"></testcase>
<testcase classname="spec.bank.saque_cp_spec" name="ContaPoupanca Saque quando o valor do saque é maior que o limite por transação E o saldo permanece conforme o valor inicial" file="./spec/bank/saque_cp_spec.rb" time="0.000721"></testcase>
<testcase classname="spec.exemplos_spec" name="suites rspec soma de valores" file="./spec/exemplos_spec.rb" time="0.000118"></testcase>
</testsuite>
